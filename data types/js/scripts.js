"use strict";

/*------------------------ТИП NUMBER----------------------------------*/
let n = 123; // числовой тип данных

//Infinity
alert(1 / 0); // Infinity больше любого числа, получается при делении на 0


//NaN
alert("не число" / 2); // вычислительная ошибка


/*------------------------BIGINT----------------------------------*/
//BigInt
const bigInt = 213124124123124125124123413243125123512n; // создали переменную типа BigInt


/*------------------------STRING----------------------------------*/
let str = "Привет";
let str2 = 'Привет';
let phrase = `Джон ${str}`; // обратные кавычки позваляют встраивать выражения в строку

alert(phrase);


/*------------------------BOOLEAN----------------------------------*/
let nameFieldChecked = true; // да, поле отмечено
let ageFieldChecked = false; // нет, поле не отмечено
//let isGreater = 4 > 1; // true
//let isGreater = 4 < 1; // false


/*------------------------NULL----------------------------------*/
let age = null; //  представляет собой «ничего», «пусто» или «значение неизвестно».


/*------------------------UNDEFINED----------------------------------*/
let age2;
alert(age2); // выведет 'undefined', переменная объявлена но значение не присвоено


/*------------------------OBJECT----------------------------------*/


/*------------------------SYMBOL----------------------------------*/





/*------------------------Оператор typeof----------------------------------*/
// typeof x оператор возвращает строку с типом данных
typeof undefined // "undefined"

typeof 0 // "number"

typeof 10n // "bigint"

typeof true // "boolean"

typeof "foo" // "string"

typeof Symbol("id") // "symbol"

typeof Math // "object"  (1)

typeof null // "object"  (2)

typeof alert // "function"  (3)